name: 'Build & Upload Assets'

on:
  workflow_run:
    workflows: ["Auto Release"]
    types:
      - completed

jobs:
  get-release-info:
    name: Get Release Info
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.get_release.outputs.release_id }}
      tag_name: ${{ steps.get_tag.outputs.tag_name }}
    steps:
      - name: Download release info artifact
        uses: actions/download-artifact@v4
        with:
          name: release-info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Read tag from artifact
        id: get_tag
        run: |
          TAG=$(jq -r .tag_name release-info.json)
          echo "tag_name=$TAG" >> $GITHUB_OUTPUT
          echo "Found tag from artifact: $TAG"

      - name: Get Release by Tag
        id: get_release
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const tag_name = "${{ steps.get_tag.outputs.tag_name }}";
            const { data: release } = await github.rest.repos.getReleaseByTag({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag: tag_name,
            });
            core.setOutput('release_id', release.id);

  build-tauri:
    name: Build & Upload
    needs: get-release-info
    if: needs.get-release-info.outputs.tag_name != ''
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code for the specific release tag
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.get-release-info.outputs.tag_name }}

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          key: ${{ matrix.args }}-${{ needs.get-release-info.outputs.tag_name }}

      - name: Build and Upload Assets
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.get-release-info.outputs.release_id }}
          args: ${{ matrix.args }}